# keepGoing = 'д'
# while keepGoing == 'д':
#     print("Первая итерация цикла")
#     keepGoing = str(input("Повторить? (Для повтора нажмите 'д': )"))
# _____________________________________________

# for num in [1, 2, 3, 4, 5]:
#     print(num)
# _____________________________________________

# for name in ['мигнуть', 'моргнуть', 'кивнуть']:
#     print(name)
# _____________________________________________
# for num in range(5):
#     print(num)
# _____________________________________________

# for num in range(5):
#     print('Hello, World!')
# _____________________________________________

# for num in range(1, 5):
#     print(num)
# _____________________________________________

# for num in range(1, 10, 2):
#     print(num)
# _____________________________________________

# # Эта программа использует цикл для вывода
# # таблицы с числами от 1 до 10 3 # и их квадратами.

# # Напечатать заголовки таблицы.
# print('Число\tКвадрат числа')
# print('--------------------- ')
#
# for num in range(1, 11):
#     square = num ** 2
#     print(num, '\t\t', square)
# _____________________________________________

# mph = 0.6214
# print('KPH\t\tMPH')
# for KMP in range(60, 131, 10):
#     MPH = KMP * mph
#     print(KMP, '\t', format(MPH, '4,.1f'))
# _____________________________________________

# Эта программа преобразует скорости от 60 2
# до 130 км/ч (с приращениями в 10 км) 3 в mph.

# START_SPEED = 60                # Начальная скорость
# END_SPEED = 131                 # Конечная скорость
# INCREMENT = 10                  # Приращение
# CONVERSATION_FACTOR = 0.6214    # Коэффициент перерасчета
#
# # Напечатать заготовки таблицы:
# print('KPH\t\tMPH')
# print("___________")
#
# # Напечатать скорости
# for kph in range(START_SPEED, END_SPEED, INCREMENT):
#     mph = kph * CONVERSATION_FACTOR
#     print(kph, format(mph, '9,.1f'))
# _____________________________________________

# # Эта программа использует цикл для вывода таблицы чисел и их квадратов.
# # Получить конечный предел
# print('Эта программа выводит список чисел')
# print('(начиная с первой) и их квадраты.')
# end = int(input('Насколько далеко мне заходить?: '))
#
# # Напечатать заголовки таблицы
# print('Число\tКвадрат числа')
# print('______________________')
#
# # Напечатать числа и их квадраты
# for num in range(1, end + 1):
#     square = num ** 2
#     print(num, '\t\t', square)
# _____________________________________________

# # Эта программа использует цикл "for in" для вывода чисел и их квадратов
# # Получить начальное значение
# start = int(input("Введите начальное значение: "))
#
# # Получить конечное значение
# end =  int(input("Насколько далеко мне заходить: "))
#
# # Напечатать заголовки таблицы
# print('Число\tКвадрат числа')
# print('______________________')
#
# # Напечатать числа и их квадраты
# for number in range(start, end + 1):
#     square = number ** 2
#     print(number, '\t\t', square)
# _____________________________________________

# # Цикл в котором реализуется последовательность чисел по нисходящей
# for num in range(10, 0, -1):
#     print(num)
# _____________________________________________

# Перепишите приведенный ниже фрагмент кода, чтобы вместо использования списка
# он вызывал функцию range:
# [О, 1, 2, 3, 4, 5]
# for х in [О, 1,2,3,4,5]:
#      print ('Обожаю эту программу!')
# for x in range(0,6):
#     print(x, end=', ')
# _____________________________________________

# Применение сигнальной метки
# Сигнальная метка - это специальное значение, которое отмечает конец последовательности значений.

# # Эта программа показывает налоги на имущество.
# TAX_FACTOR = 0.0065         # Представляет налоговый коэффициент.
# # Получить номер первого лота
# print('Введите номер имущественного лота: ')
# print('Либо "0" чтобы завершить работу')
#
# lot = int(input('Номер лота: '))
#
# # Цикл до сигнальной метки (пока user не введет "0")
# while lot != 0:
#     # Получить стоимость имущества
#     value = float(input('Bвeдитe стоимость имущества: '))
#
#     # Исчислить налог на имущество
#     tax = value * TAX_FACTOR
#
#     # Показать налог
#     print('Налог на имущество: $', format(tax, '.2f'), sep='')
#
#     # Получить следующий номер лота
#     print('Введите следующий номер лота либо'
#           'введите "0" для завершения работы.')
#     lot = int(input("Введите номер лота: "))
# _____________________________________________

# # Цикл валидации входных данных
# # Получить оценку за тест
# score = int(input("Введите оценку: "))
# # Убедиться, что введено число в диапозоне от 1 до 5
# while score < 0 or score > 5:
#     print("OШИБКA: оценка не может быть отрицательной либо выше 5!")
#     score = int(input("Введите правильную оценку: "))
# _____________________________________________

# Вложенные циклы
for seconds in range(60):
    print(seconds)
# Можно добавить переменную minutes и вложить цикл выше
# внутрь еще одного цикла, который повторяется 60 минут:
for minutes in range(60):
    for seconds in range(60):
        print(minutes, ':', seconds)
# Для того чтобы сделать модель часов законченной,
# можно добавить еще одну переменную для подсчета часов:
for hours in range(24):
    for minutes in range(60):
        for seconds in range(60):
            print(hours, ':', minutes, ':', seconds)
# _____________________________________________

# Эта программа усредняет оценки. Она запрашивает количество
# студентов и количество оценок в расчете на студента.
# Получить количество студентов.
num_students = int(input('Скoлькo у вас студентов? '))
# Получить количество оценок в расчете на студента.
num_test_scores = int(input('Cкoлькo оценок в расчете на студента? '))
# Определить средний балл каждого студента.
for student in range(num_students):
    # Инициализировать накопитель оценок:
    total = 0.0
    # Получить оценки за лабораторные работы.
    print('Номер студента', student + 1)
    print('-----------------')
    for test_num in range(num_test_scores):
        print('Номер лабораторной работы', test_num + 1, end='')
        score = float(input(': ',))
        total += score
    # Расчитать средний балл этого студента
    average = total / num_test_scores
    # Показать средний балл
    print('Средний балл студента', student + 1, 'составляет', format(average, '.1f'))
    print()
# _____________________________________________

columns = int(input('Сколько столбиков: '))
rows = int(input('Сколько рядов: '))
for row in range(rows):
    for column in range(columns):
        print('*', end='')
    print()
# _____________________________________________

for row in range(10):
    for column in range(row + 1):
        print('*', end='')
    print()
