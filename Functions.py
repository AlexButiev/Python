# def message():
#     print('Привет')
#     print('Как дела?')
#
# # вызов функции:
# message()
#
# # Эта программа показывает пошаговые инструкции
# # для разборки бельевой сушилки фирмы Acme.
# # Главная функция выполняет основную логику программы.
# def main():
#     # Показать стартовое сообщение
#     startup_message()
#     input('Нажать "Enter", чтобы увидеть Шаг 1')
#     # Показать шаг 1
#     step1()
#     input('Нажать "Enter", чтобы увидеть шаг 2.')
#     # Показать шаг 2
#     step2()
#     input('Нажать "Enter", чтобы увидеть шаг 3.')
#     # Показать шаг 3
#     step3()
#     input('Нажать "Enter", чтобы увидеть шаг 4.')
#     # Показать шаг 4
#     step4()
#
# # Функция startup_message показывает первоначальное сообщение программы на экране.
# def startup_message():
#     print('Этa программа дает рекомендации')
#     print('пo разборке бельевой сушилки фирмы АСМЕ.')
#     print('Данный процесс состоит из 4 шагов.')
#     print()
#
# # Функция step1 показывает инструкции для шага 1.
# def step1():
#     print('Шаг 1: отключить сушилку и отодвинуть её от стены')
#     print()
# # Функция step2 показывает инструкции для шага 2
# def step2():
#     print('Шаг 2: удалить 6 винтов с задней стороны машинки')
#     print()
# # Функция step3 показывает инструкции для шага 3
# def step3():
#     print('Шаг 3: удалить заднюю панель сушилки')
#     print()
# # Функция step4 показывает инструкции для шага 4
# def step4():
#     print('Шаг 4: вынуть верхний блок сушилки.')
#     print()
#
# # Вызвать главную функцию, чтобы начать программу
# main()

# Эта программа конвертирует количество чашек в жидкие унции

# def main():
#     intro()
#     cups_needed = int(input('Введите количество чашек: '))
#     cupsToOunces(cups_needed)
#
# def intro():
#     print('Эта программа конвертирует количество чашек в '
#           'жидкие унции.\nДля справки приводим формулу: 1 чашка = 8 жидких унций')
#     print()
# def cupsToOunces(cups):
#     ounces = cups * 8
#     print('Это конвертируется в', ounces, 'унции(й)')
#
# main()


# # Повторяющаяся программа для закреаления материала по чашкам
# def main():
#     intro()
#     cups_needed = int(input('Сколько чашек: '))
#     cupsToOunces(cups_needed)
# def intro():
#     print('Эта программа для конвертации чашек в жидкие унции.')
#     print("Для справки:")
#     print("Одна чашка = 8 жидких унций.")
#     print()
# def cupsToOunces(cups):
#     ounces = cups * 8
#     print('В', cups, 'чашках содержиться', ounces, 'унции(й)')
#
# main()

# # Программа демонстрирует функцию, которая принимает два аргумента
# def main():
#     print('Сумма чисел 12 и 45 равняется:')
#     showSum(12, 45)
# # Функция showSum принимает два аргумента и показывает их сумму
# def showSum(num1, num2):
#     result = num1 + num2
#     print(result)
#
# main()

# # Эта программа демонстрирует функцию, принимающих
# # в качестве параметров 2 строковых литерала:
# def main():
#     firstName = input('Name: ')                 # Вводные данные от пользователя
#     lastdName = input('Second Name: ')          # Вводные данные от пользователя
#     print('Ваше имя в обратном порядке: ')      # Вывод текста
#     reverseName(firstName, lastdName)           # Определяем функцию
# def reverseName(first, last):                   # Вызываем функцию
#     print(last, first)                          # Тело функции
#
# main()                                          # Вызываем главную функцию

# Внесение изменений в параметры

# # Эта программа демонстрирует что происходит, когда вы изменяете значение параметра
# def main():
#     value = 99
#     print('Значение равно', value)
#     changeValue(value)
#     print('После возвращения в функцию main значение равно', value)
# def changeValue(arg):
#     print('Я изменяю значение.')
#     arg = 5
#     print('Теперь значение равно', arg)
#
# main()


# # Эта программа демонстрирует именнованные аргументы
# def main():
#     # Показать сумму простого процентного дохода, используя:
#     # 0.01 как процентной ставки за период
#     # 10 как количество периодов
#     # $10 000 как основную сумму на счете
#     show_interest(rate=0.01, periods=10, principal=10000.0)
#
# # Функция showInterest показывает сумму простого процентного дохода
# # для заданной основной суммы, процентной ставки за период и количество периодов
#
#
# def show_interest(principal, rate, periods):
#     interest = principal * rate * periods
#     print('Простой процентный доход составит $', format(interest, '.2f'), sep='')
#
#
# main()


# # Эта программа демонстрирует передачу в функцию двух строковых значений
# # в качестве именновынных аргументов
#
# def main():
#     first_name = input('Введите свое имя: ')
#     last_name = input('Введите свою фамилию: ')
#     print('Ваше имя в обратном порядке: ')
#     reverse_name(last=last_name, first=first_name)
#
#
# def reverse_name(first, last):
#     print(last, first)
#
#
# main()
#
# show_name('Kate', 25)               # Позиционный аргумент
# show_name(name='Kate', age=25)      # Именнованный аргумент

# ##################Глобальные переменные и глобальные константы##################
#  ## Следует ограничить использование глобальных переменных
#
#
# # Создать глобальную переменную
# my_value = 10
#
# # Функция show_value печатает значение глобальной переменной
#
#
# def show_value():
#     print(my_value)
#
# show_value()
#
# # Если нужно, чтобы инструкция внутри функции присваивала значение
# # глобальной переменной, то требуется дополнительный шаг:
#
# # Создать глобальную переменную:
# number = 0
#
# def main():
#     global number               # используем слово "global", чтобы объявить переменную number.
#     number = int(input('введите число: '))
#     show_number()
#
#
# def show_number():
#     print('Вы ввели число', number)
#
# print('Значение number вне функции равно', number)

# # Глобальные КОНСТАНТЫ
#
# # Используем глобальную константу
# # Ставка взноса компании
# CONTRIBUTION_RATE = 0.05
#
# def main():
#     gross_pay =float(input('Введите ЗП: '))
#     bonus = float(input('Введите сумму премий: '))
#     show_pay_contrib(gross_pay)
#     show_bonus_contrib(bonus)
#
# def show_pay_contrib(gross):
#     contrib = gross * CONTRIBUTION_RATE
#     print('Взнос исходя из ЗП $', format(contrib, ',.2f'), sep='')
#
#
# def show_bonus_contrib(bonus):
#     contrib = bonus * CONTRIBUTION_RATE
#     print('Взнос исходя из премий $', format(contrib, ',.2f'), sep='')
#
#
# main()